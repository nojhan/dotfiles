# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

exec "setxkbmap -model pc105 -layout fr -variant bepo -options lv3:ralt_switch,compose:caps,terminate:ctrl_alt_bksp"

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

# Alt = Mod1, Win = Mod4
set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork --image=/home/nojhan/Images/Wood.png

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
# i3-sensible-terminal
bindsym $mod+F1 exec terminator
bindsym $mod+t exec terminator
bindsym $mod+F2 exec firefox
bindsym $mod+n exec firefox
bindsym $mod+F3 exec thunar
bindsym $mod+h exec thunar

# Lock screen
bindsym $mod+l exec "cinnamon-screensaver & cinnamon-screensaver-command -l"
# Lock and turn off screen
bindsym $mod+Shift+l exec "cinnamon-screensaver & cinnamon-screensaver-command -l & xset -display :0.0 dpms force off"

# kill focused window
bindsym $mod+x kill

# start dmenu (a program launcher)
# bindsym $mod+d exec --no-startup-id dmenu_run
# bindsym $mod+Return exec --no-startup-id dmenu_run
# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop
# bindcode $mod+Return exec --no-startup-id j4-dmenu-desktop --dmenu="dmenu_run -i -l 10 -nb '#4f7dde' -nf '#f8f8f8' -sb '#cf8200' -sf '#f8f8f8'"
# bindcode $mod+Shift+Return exec --no-startup-id dmenu_run
bindsym $mod+Return exec "rofi -modi drun,run -show drun"
# bindsym $mod+Shift+Return exec dmenu_run -i -l 10 -p '> ' -nb '#4f7dde' -nf '#f8f8f8' -sb '#cf8200' -sf '#f8f8f8'

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# Move focused workspace
bindsym $mod+Ctrl+Shift+Left move workspace to output left
bindsym $mod+Ctrl+Shift+Right move workspace to output right

# split in horizontal orientation
bindsym $mod+s split h

# split in vertical orientation
bindsym $mod+Shift+S split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
# bindsym $mod+s layout stacking
bindsym $mod+Shift+Tab layout tabbed
bindsym $mod+b layout toggle split

# Forgiving shortcut when in tab layout
bindsym $mod+Tab focus left

# toggle tiling / floating
bindsym $mod+a floating toggle

# change focus between tiling / floating windows
bindsym $mod+u focus mode_toggle

# focus on the parent container
bindsym $mod+i focus parent

# focus on the child (undo focusing on parent)
bindsym $mod+Shift+i focus child

# Make the currently focused window a scratchpad
bindsym $mod+Shift+space move scratchpad

# Show the first scratchpad window
bindsym $mod+space scratchpad show

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1: comm"
set $ws2 "2: music"
set $ws3 "3: work"
set $ws4 "4: dev"
set $ws5 "5: misc"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace and switch to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1 , workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2 , workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3 , workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4 , workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5 , workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6 , workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7 , workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8 , workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9 , workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10 , workspace number $ws10

# reload the configuration file
bindsym $mod+Shift+C reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+R restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+E exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        # bindsym j resize shrink width 10 px or 10 ppt
        # bindsym k resize grow height 10 px or 10 ppt
        # bindsym l resize shrink height 10 px or 10 ppt
        # bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

# Switch to resize mode.
bindsym $mod+r mode "resize"

# Set the focused window to be of a fixed size.
bindsym $mod+v resize set 300 px
bindsym $mod+Shift+v resize set 400 px

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        status_command i3status -c ~/.config/i3status/config
        workspace_buttons yes
        binding_mode_indicator yes
        tray_output primary
        font pango:monospace 10
        colors {
            # class           border  backgrd text
            focused_workspace #efcd45 #efcd45 #00000
            urgent_workspace  #db4939 #cb3929 #ffffff
        }
}
# bar {
#         status_command "~/code/liquidprompt/contrib/status-bar/print-loop.sh default ~/code/liquidprompt/contrib/presets/misc/status-line.conf"
# }

# Liquidprompt as a status bar on top-left of the screen.
exec --no-startup-id ~/code/liquidprompt/contrib/status-bar/i3-dock.sh

# Allow to adjust border width
default_border normal 3
default_floating_border normal 3
hide_edge_borders none

# class                 border  backgr. text    indicator child_border
client.focused          #efcd45 #dfbd35 #000000 #cf8200   #f5db65
client.urgent           #db4939 #cb3929 #ffffff #ff5949   #ff5949

# second press goes back to previous workspace
workspace_auto_back_and_forth no

# Laptop: eDP-1-1, side screen: HDMI-1-2
#workspace $ws1 output eDP-1-1
#workspace $ws2 output eDP-1-1
#workspace $ws3 output HDMI-1-2
#bindsym $mod+Shift+z move workspace to output eDP-1-1
#bindsym $mod+Shift+w move workspace to output HDMI-1-2

# assign [class="firefox"] $ws1
assign [class="Pavucontrol"] $ws2
assign [class="Blueman-manager"] $ws2
assign [class="Terminator" window_role="btop"] $ws1
assign [class="Terminator" window_role="boinc"] $ws1

# Xscreensaver as background
# exec --no-startup-id "/usr/libexec/xscreensaver/intermomentary -root -draw-delay 30000 -num-discs 150 -max-riders 50 -max-radius 5000"

# Video as background
# exec --no-startup-id "mpv --wid=0 --loop --no-terminal --speed=0.5 --video-align-x=0.5 --no-audio --video-sync=display-resample --interpolation --tscale=oversample ~/Vidéos/Blue_Turn_notitle.mp4"


# Sound controller
exec pavucontrol

# Bluetooth controller
exec blueman-manager

# btop system monitor
exec "terminator --profile 'small font' --role btop --command btop"

# colored boinc client
# exec "terminator --profile 'small font' --role boinc --command 'boinc | colout -t boinc'"

for_window [window_role="scratchpad"] move window to scratchpad
exec terminator --role scratchpad#
